basePath: /api/v1
definitions:
  apitypes.ErrorResponse:
    properties:
      details:
        additionalProperties:
          type: string
        description: Ejemplo más simple para map
        example:
          field_name: problema de validación
        type: object
      error:
        description: Mensaje principal del error
        example: Mensaje descriptivo del error
        type: string
    type: object
  categorias.CategoriaResponseDTO:
    properties:
      id:
        description: '@description ID de la categoría'
        example: 1
        type: integer
      nombre:
        example: Postres
        type: string
      slug:
        example: postres
        type: string
    type: object
  recetas.RecetaRequestDTO:
    properties:
      categoria_id:
        description: '@description ID de la categoría a la que pertenece'
        example: 1
        type: integer
      descripcion:
        description: '@description Pasos o descripción de la receta'
        example: Una deliciosa paella tradicional...
        type: string
      foto:
        description: '@description Nombre del archivo de imagen o URL (opcional en
          request)'
        example: paella.jpg
        type: string
      nombre:
        description: '@description Nombre de la receta'
        example: Paella de Mariscos
        maxLength: 150
        minLength: 3
        type: string
      tiempo_preparacion:
        description: '@description Tiempo estimado de preparación'
        example: 1 hora 30 mins
        maxLength: 50
        type: string
    required:
    - categoria_id
    - descripcion
    - nombre
    - tiempo_preparacion
    type: object
  recetas.RecetaResponseDTO:
    description: Estructura para enviar datos de receta al cliente desde la API.
    properties:
      categoria:
        allOf:
        - $ref: '#/definitions/categorias.CategoriaResponseDTO'
        description: Objeto de Categoría anidado (usando el DTO de 'categorias')
      created_at:
        description: 'Formato consistente (ej: RFC3339)'
        example: "2025-05-17T10:00:00Z"
        type: string
      descripcion:
        example: Una deliciosa paella tradicional...
        type: string
      foto:
        description: URL completa o path relativo accesible
        example: uploads/recetas/paella.jpg
        type: string
      id:
        example: 1
        type: integer
      nombre:
        example: Paella de Mariscos
        type: string
      slug:
        example: paella-de-mariscos
        type: string
      tiempo_preparacion:
        example: 1 hora 30 mins
        type: string
      updated_at:
        description: Formato consistente
        example: "2025-05-17T10:00:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@ejemplo.com
    name: Soporte API
    url: http://www.ejemplo.com/support
  description: Esta es una API para gestionar recetas, categorías e ingredientes.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API de Recetas Fullstack
  version: "1.0"
paths:
  /categorias/{categoria_id}/recetas:
    get:
      consumes:
      - application/json
      description: Devuelve una lista de recetas que pertenecen a una categoría específica.
      parameters:
      - description: ID de la Categoría para filtrar recetas
        in: path
        name: categoria_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de recetas para la categoría
          schema:
            items:
              $ref: '#/definitions/recetas.RecetaResponseDTO'
            type: array
        "400":
          description: ID de categoría inválido
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "404":
          description: Categoría no encontrada o sin recetas
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtiene recetas por ID de categoría
      tags:
      - Recetas
      - Categorias
  /recetas:
    post:
      consumes:
      - application/json
      description: Crea una nueva receta con los datos proporcionados. La foto se
        maneja como un nombre de archivo o URL.
      parameters:
      - description: Datos de la Receta a Crear
        in: body
        name: receta
        required: true
        schema:
          $ref: '#/definitions/recetas.RecetaRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Receta creada exitosamente
          schema:
            $ref: '#/definitions/recetas.RecetaResponseDTO'
        "400":
          description: 'Datos de entrada inválidos (ej: validación, categoría ID no
            existe)'
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Crea una nueva receta
      tags:
      - Recetas
  /recetas/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina permanentemente una receta específica por su ID.
      parameters:
      - description: ID de la Receta a Eliminar
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Sin contenido (eliminación exitosa)
        "400":
          description: ID inválido
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "404":
          description: Receta no encontrada
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Elimina una receta por ID
      tags:
      - Recetas
    get:
      consumes:
      - application/json
      description: Devuelve los detalles de una receta específica por su ID, con su
        categoría.
      parameters:
      - description: ID de la Receta
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Receta encontrada
          schema:
            $ref: '#/definitions/recetas.RecetaResponseDTO'
        "400":
          description: ID inválido
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "404":
          description: Receta no encontrada
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Obtiene una receta por ID
      tags:
      - Recetas
    put:
      consumes:
      - application/json
      description: Actualiza una receta existente con los datos proporcionados. La
        foto se maneja como un nombre de archivo o URL.
      parameters:
      - description: ID de la Receta a Actualizar
        in: path
        name: id
        required: true
        type: integer
      - description: Datos de la Receta a Actualizar
        in: body
        name: receta
        required: true
        schema:
          $ref: '#/definitions/recetas.RecetaRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Receta actualizada exitosamente
          schema:
            $ref: '#/definitions/recetas.RecetaResponseDTO'
        "400":
          description: 'Datos de entrada inválidos (ej: validación, categoría ID no
            existe)'
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "404":
          description: Receta no encontrada
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apitypes.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Actualiza una receta existente
      tags:
      - Recetas
securityDefinitions:
  ApiKeyAuth:
    description: Escribe "Bearer" seguido de un espacio y tu token JWT.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
